version: '3.8'

services:
  nginx:
    image: transcendence:nginx_image
    container_name: nginx-container
    build: ./infrastructure/nginx/
    ports:
      - 443:443
    volumes:
      - vault_data:/vault
    networks:
      - transcendence_net
    depends_on:
      - user_management
      - chat
      - game
      - tournaments
    restart: always

  frontend:
    image: transcendence:frontend_image
    container_name: frontend-container
    build: ./infrastructure/frontend/
    ports:
      - 3000:3000
    volumes:
      - frontend:/app
      - vault_data:/vault
    networks:
      - transcendence_net
    restart: always



  user_management:
    image: transcendence:user_management_image
    container_name: user-management-container
    build: ./infrastructure/user_management/
    ports:
      - 8000:8000
    volumes:
      - user_management_data:/app
      - vault_data:/vault
    networks:
      - transcendence_net
    depends_on:
      - user_management_db
      - redis
    env_file:
      - vault/.env
    restart: always

  user_management_db:
    image: transcendence:user_management_db_image
    container_name: user-management-db-container
    build: ./infrastructure/user_management_db/
    ports:
      - 5432:5432
    volumes:
      - user_management_db_data:/var/lib/postgresql/data
    networks:
      - transcendence_net
    env_file:
      - vault/.env
    restart: always



  chat:
    image: transcendence:chat_image
    container_name: chat-container
    build: ./infrastructure/chat/
    ports:
      - 8001:8001
    volumes:
      - chat_data:/app
      - vault_data:/vault
    networks:
      - transcendence_net
    depends_on:
      - chat_db
      - redis
    env_file:
      - vault/.env
    restart: always

  chat_db:
    image: transcendence:chat_db_image
    container_name: chat-db-container
    build: ./infrastructure/chat_db/
    ports:
      - 5434:5434
    volumes:
      - chat_db_data:/var/lib/postgresql/data
    networks:
      - transcendence_net
    env_file:
      - vault/.env
    restart: always



  game:
    image: transcendence:game_image
    container_name: game-container
    build: ./infrastructure/game/
    ports:
      - 8002:8002
    volumes:
      - game_data:/app
      - vault_data:/vault
    networks:
      - transcendence_net
    depends_on:
      - game_db
      - redis
    env_file:
      - vault/.env
    restart: always

  game_db:
    image: transcendence:game_db_image
    container_name: game-db-container
    build: ./infrastructure/game_db/
    ports:
      - 5435:5435
    volumes:
      - game_db_data:/var/lib/postgresql/data
    networks:
      - transcendence_net
    env_file:
      - vault/.env
    restart: always



  tournaments:
    image: transcendence:tournaments_image
    container_name: tournaments-container
    build: ./infrastructure/tournaments/
    ports:
      - 8003:8003
    volumes:
      - tournaments_data:/app
      - vault_data:/vault
    networks:
      - transcendence_net
    depends_on:
      - tournaments_db
      - redis
    env_file:
      - vault/.env
    restart: always

  tournaments_db:
    image: transcendence:tournaments_db_image
    container_name: tournaments-db-container
    build: ./infrastructure/tournaments_db/
    ports:
      - 5436:5436
    volumes:
      - tournaments_db_data:/var/lib/postgresql/data
    networks:
      - transcendence_net
    env_file:
      - vault/.env
    restart: always




  redis:
    image: transcendence:redis_image
    container_name: redis-container
    build: ./infrastructure/redis/
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - transcendence_net
    env_file:
      - vault/.env
    restart: always








volumes:
  frontend:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/frontend/
      o: bind
  
  assets:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/frontend/assets/
      o: bind



  vault_data:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/vault
      o: bind



  user_management_data:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/backend/user_management_service/
      o: bind

  user_management_db_data:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/volumes/db_data/user_management_db_data
      o: bind
  


  chat_data:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/backend/chat_service/
      o: bind

  chat_db_data:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/volumes/db_data/chat_db_data
      o: bind



  game_data:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/backend/game_service/
      o: bind

  game_db_data:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/volumes/db_data/game_db_data
      o: bind



  tournaments_data:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/backend/tournaments_service/
      o: bind

  tournaments_db_data:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/volumes/db_data/tournaments_db_data
      o: bind



  redis_data:
    driver: local
    driver_opts:
      type: none
      device: ${COMPOSE_PROJECT_PATH}/volumes/db_data/redis_data
      o: bind




networks:
  transcendence_net:
    driver: bridge