events {}
http
{
    upstream frontend
    {
        server frontend-container:3000;
    }
    upstream user_management_service
    {
        server user-management-container:8000;
    }
    upstream chat_service
    {
        server chat-container:8001;
    }
    upstream game_service
    {
        server game-container:8002;
    }
    upstream tournaments_service
    {
        server tournaments-container:8003;
    }

    map $http_upgrade $connection_upgrade
    {
        default upgrade;
        '' close;
    }
    map $remote_addr $proxy_forwarded_elem
    {
        default "$proxy_add_x_forwarded_for";
    }

    server {
        listen 80;

        location / {
            return 301 https://$host$request_uri;
        }
    }


    server
    {
        listen 443 ssl;
        ssl_certificate /vault/domain.crt;
        ssl_certificate_key /vault/domain.key;
        ssl_protocols TLSv1.3 TLSv1.2;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_forwarded_elem;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size 8M;


        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.json;

        location = /error.json {
            internal;
            
            set $error_details "Internal Server Error";
            
            if ($status = 400) { set $error_details "Bad Request"; }
            if ($status = 401) { set $error_details "Unauthorized"; }
            if ($status = 403) { set $error_details "Forbidden"; }
            if ($status = 404) { set $error_details "Not Found"; }
            if ($status = 500) { set $error_details "Internal Server Error"; }
            if ($status = 502) { set $error_details "Bad Gateway"; }
            if ($status = 503) { set $error_details "Service Unavailable"; }
            if ($status = 504) { set $error_details "Gateway Timeout"; }
            
            proxy_intercept_errors on;
            return 500 '{"error": "$error_details"}';
        }

        location ~ ^/oauth/ {
            proxy_pass http://user_management_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_forwarded_elem;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ ^/admin/(user_management_service|chat_service|game_service|tournaments_service)/
        {
            set $upstream "";
            if ($uri ~ "^/admin/user_management_service/")
            {
                set $upstream "user_management_service";
            }
            if ($uri ~ "^/admin/chat_service/")
            {
                set $upstream "chat_service";
            }
            if ($uri ~ "^/admin/game_service/")
            {
                set $upstream "game_service";
            }
            if ($uri ~ "^/admin/tournaments_service/")
            {
                set $upstream "tournaments_service";
            }

            rewrite ^/admin/(user_management_service|chat_service|game_service|tournaments_service)/(.*)$ /admin/$1/$2 break;
            proxy_pass http://$upstream;
        }

        location /
        {
            proxy_pass http://frontend;
        }

        location ~ ^/ws/(notifications|chat|game|tournaments)/
        {
            set $upstream "";
            if ($uri ~ "^/ws/notifications/")
            {
                set $upstream "user_management_service";
            }
            if ($uri ~ "^/ws/chat/")
            {
                set $upstream "chat_service";
            }
            if ($uri ~ "^/ws/game/")
            {
                set $upstream "game_service";
            }
            if ($uri ~ "^/ws/tournaments/")
            {
                set $upstream "tournaments_service";
            }
            proxy_pass http://$upstream;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location ~ ^/api/(auth|chat|game|tournaments)/
        {
            set $upstream "";
            if ($uri ~ "^/api/auth/")
            {
                set $upstream "user_management_service";
            }
            if ($uri ~ "^/api/chat/")
            {
                set $upstream "chat_service";
            }
            if ($uri ~ "^/api/game/")
            {
                set $upstream "game_service";
            }
            if ($uri ~ "^/api/tournaments/")
            {
                set $upstream "tournaments_service";
            }
            proxy_pass http://$upstream;
        }

        location /admin/grafana {
            proxy_pass http://grafana-container:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_forwarded_elem;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            sub_filter '/public/' '/admin/grafana/public/';
            sub_filter_once off;
        }

    }
}